version: "3.9"
services:
  redis:
    container_name: redis_container
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"
    command:
      - redis-server --loglevel warning
    volumes:
      - ./docker-volume/data:/data
  redis-commander:
    container_name: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    ports:
      - '8081:8081'
    environment:
    - REDIS_HOSTS=local:redis_container:6379
  mongo:
    container_name: mongo_container
    image: "mongo:latest"
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker-volume/data:/data/db
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
  mysql:
    container_name: mysql_container
    image: "mysql:latest"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
       - MYSQL_USER=abhi
       - MYSQL_DATABASE=jobber_auth
       - MYSQL_ROOT_PASSWORD=password
       - MYSQL_PASSWORD=password

    ports:
      - "3306:3306"
    volumes:
      - ./docker-volume/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: "postgres"
    restart: always
   
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=abhi
      - POSTGRES_DB=jobber_review
    ports:
      - "5432:5432"
    volumes:
      - ./docker-volume/postgres:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq_container
    image: "rabbitmq:3.13-rc-management-alpine"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=abhi
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker-volume/rabbitmq:/var/lib/rabbitmq
  elasticsearch:
    container_name: elasticsearch_container
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.10.4"
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: admin1234
    volumes:
      - ./docker-volume/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
  kibana:
    image: "docker.elastic.co/kibana/kibana:8.10.4"
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - "5601:5601"
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

    notifications:
      container_name: notification_sevice
      build:
       context: ../02NotificationService
       dockerfile: Dockerfile
      restart: always
      ports:
        - "4001:4001"
      environment:
         - ENABLE_APM=0
         - NODE_ENV=development
         - SERVER_PORT=4001
         - CLIENT_URL=http://localhost:3000
         - RABBITMQ_ENDPOINT=amqp://abhi:password@rabbitmq_container:5672
         - SENDER_EMAIL=
         - SENDER_EMAIL_PASSWORD=
         - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
         - ELASTIC_APM_SERVER_URL=http://localhost:8200
         - ELASTIC_APM_SECRET_TOKEN=
      depends_on:
        - rabbitmq
        - elasticsearch
networks:
  elastic:
    name: elastic
